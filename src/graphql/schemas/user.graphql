scalar JSON
type User {
  fullName: String
  age: Int
  active: Boolean
  _id: String
}

type GetAllUser {
  users: [User]
  page: Int
  perPage: Int
  totalPage: Int
  totalCount: Int
}

input Search {
  keyword: String
  value: String
}

input GetAllUserInput {
  page: Int
  perPage: Int
  search: Search
  sort: JSON
}

type Query {
  GetAllUser(input: GetAllUserInput!): GetAllUser
}

type DeleteUser {
  user: JSON
}

input DeleteUserInput {
  id: String
}

type Mutation {
  DeleteUser(input: DeleteUserInput!): DeleteUser
}

type DeleteUsers {
  success: JSON
}

input DeleteUsersInput {
  ids: String
}

type Mutation {
  DeleteUsers(input: DeleteUsersInput!): DeleteUsers
}

type CreateUser {
  user: JSON
}

input CreateUserInput {
  fullName: String
  DOB: String
  division: String
  active: Boolean
}

type Mutation {
  CreateUser(input: CreateUserInput!): CreateUser
}
